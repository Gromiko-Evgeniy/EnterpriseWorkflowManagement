// <auto-generated />
using System;
using HiringService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HiringService.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230817065324_NewConfig")]
    partial class NewConfig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HiringService.Domain.Entities.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CV")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("CV");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("NextStageTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("NextStageTime");

                    b.HasKey("Id");

                    b.ToTable("Candidates", (string)null);
                });

            modelBuilder.Entity("HiringService.Domain.Entities.HiringStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidateId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("Description");

                    b.Property<int>("HiringStageNameId")
                        .HasColumnType("integer");

                    b.Property<int>("IntervierId")
                        .HasColumnType("integer");

                    b.Property<bool>("PassedSuccessfully")
                        .HasColumnType("boolean")
                        .HasColumnName("PassedSuccessfully");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("HiringStageNameId");

                    b.HasIndex("IntervierId");

                    b.ToTable("HiringStages", (string)null);
                });

            modelBuilder.Entity("HiringService.Domain.Entities.HiringStageName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("StageNames", (string)null);
                });

            modelBuilder.Entity("HiringService.Domain.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Workers", (string)null);
                });

            modelBuilder.Entity("HiringService.Domain.Entities.HiringStage", b =>
                {
                    b.HasOne("HiringService.Domain.Entities.Candidate", "Candidate")
                        .WithMany("HiringStages")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("HiringService.Domain.Entities.HiringStageName", "HiringStageName")
                        .WithMany("HiringStages")
                        .HasForeignKey("HiringStageNameId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("HiringService.Domain.Entities.Worker", "Intervier")
                        .WithMany("HiringStages")
                        .HasForeignKey("IntervierId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("HiringStageName");

                    b.Navigation("Intervier");
                });

            modelBuilder.Entity("HiringService.Domain.Entities.Candidate", b =>
                {
                    b.Navigation("HiringStages");
                });

            modelBuilder.Entity("HiringService.Domain.Entities.HiringStageName", b =>
                {
                    b.Navigation("HiringStages");
                });

            modelBuilder.Entity("HiringService.Domain.Entities.Worker", b =>
                {
                    b.Navigation("HiringStages");
                });
#pragma warning restore 612, 618
        }
    }
}
